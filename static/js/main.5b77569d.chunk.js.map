{"version":3,"sources":["01.jpg","02.jpg","Movie.js","App.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","map","genre","index","length","slice","type","class","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","console","log","renderMovies","movie","id","medium_cover_image","this","Math","floor","random","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAAe,ICAA,ICmJAA,MAnGf,YAA0D,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAC7C,OACE,sBAAKC,UAAU,iBAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,eAAeC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IAC9D,sBAAKI,UAAU,aAAf,UACE,oBAAIA,UAAU,cAAd,SAA6BJ,IAC7B,wBAAQI,UAAU,aAAlB,SAAgCL,IAChC,oBAAIK,UAAU,eAAd,SACGD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACV,oBAAgBL,UAAU,eAA1B,SACGK,IAAUN,EAAOO,OAAS,EAAIF,EAAQA,EAAQ,KADxCC,QAKb,oBAAGL,UAAU,gBAAb,UACGH,EAAQU,MAAM,EAAG,KACjBV,EAAQS,OAAS,KAChB,wBACEN,UAAU,mBACVJ,MAAM,YACNY,KAAK,SAHP,SAKE,mBAAGR,UAAU,iCA2BvB,qBAAKA,UAAU,sBAAf,SACE,sBAAKA,UAAU,aAAf,UACE,qBAAIA,UAAU,cAAd,UACE,oBAAIA,UAAU,8BAAd,SACE,qBACEA,UAAU,UACVC,IAAI,uCACJC,IAAI,cAGR,oBAAIF,UAAU,+BAAd,SACE,qBACEA,UAAU,UACVC,IAAI,0EACJC,IAAI,cAGR,oBAAIF,UAAU,8BAAd,SACE,qBACEA,UAAU,UACVC,IAAI,gFACJC,IAAI,iBAIV,sBAAMF,UAAU,eAAhB,iGAGA,sBAAKA,UAAU,YAAf,UACE,wBAAQA,UAAU,kBAAkBQ,KAAK,SAAzC,SACE,mBAAGC,MAAM,uBAEX,sBAAMT,UAAU,iBAAhB,4BC/DGU,G,mNA3DbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAOVC,U,sBAAY,8BAAAC,EAAA,sEAKAC,IAAMC,IACd,yEANQ,gBAGEJ,EAHF,EAERK,KACEA,KAAQL,OAOZ,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IACnCQ,QAAQC,IAAIR,GAXF,2C,EAcZS,aAAe,WAGb,OAFmB,EAAKX,MAAhBE,OAEMV,KAAI,SAACoB,GAAD,OAChB,cAAC,EAAD,CAEEC,GAAID,EAAMC,GACV7B,KAAM4B,EAAM5B,KACZC,MAAO2B,EAAM3B,MACbC,QAAS0B,EAAM1B,QACfC,OAAQyB,EAAME,mBACd1B,OAAQwB,EAAMxB,QANTwB,EAAMC,Q,kEAtBfE,KAAKZ,c,+BAiCG,IAAD,EACuBY,KAAKf,MAA3BC,EADD,EACCA,UAAWC,EADZ,EACYA,OACJc,KAAKC,MAAsB,IAAhBD,KAAKE,UAI/B,OAFAT,QAAQC,IAAIR,GAGV,8BACGD,EACC,qBAAKZ,UAAU,SAAf,SACE,mBAAGA,UAAU,cAAb,uCAGF,qBAAKA,UAAU,SAAf,SAAyB0B,KAAKJ,uB,GArDtBQ,IAAMC,YCHxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.5b77569d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/01.55b5f0d7.jpg\";","export default __webpack_public_path__ + \"static/media/02.0f7c52b6.jpg\";","import react from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\nimport \"./01.jpg\";\r\nimport \"./02.jpg\";\r\nimport \"./06.png\";\r\n\r\n// genres.map((genre, index) => (\r\n//   <li key={index} className=\"users_user\">\r\n//     {genre[index] === Users.genre &&\r\n//       (userName = users_userName) &&\r\n//       (userImg = users_userImg)}\r\n//   </li>\r\n// ));\r\n\r\n// const users = [\r\n//   Action: {\r\n//     name: \"장동윤\",\r\n//     img:\r\n//       \"https://pds.joins.com/news/component/htmlphoto_mmdata/202003/09/0fec6e52-f7f4-42d4-b7a2-abc4157add1c.jpg\",\r\n//   },\r\n//   Adventure: { name: \"Charlie Brown\", img: \"02.jpg\" },\r\n//   Drama: { name: \"표지훈\", img: \"03.jpg\" },\r\n//   Family: { name: \"김세정\", img: \"04.jpg\" },\r\n//   Mystery: { name: \"한소희\", img: \"05.jpg\" },\r\n//   SciFi: { name: \"Inter Milan\", img: \"06.png\" },\r\n//   Documentary: { name: \"황민현\", img: \"07.jpg\" },\r\n//   Drama: { name: \"이지은\", img: \"08.jpg\" },\r\n//   Cinema: { name: \"유연석\", img: \"09.jpg\" },\r\n//   Comedy: { name: \"키움 히어로즈\", img: \"10.png\" },\r\n//   RealityTV: { name: \"배수지\", img: \"11.jpg\" },\r\n//   TalkShow: { name: \"しんのすけ\", img: \"12.png\" },\r\n//   Thriller: { name: \"SpongeBob\", img: \"13.jpeg\" },\r\n//   Biography: { name: \"웰시토끼\", img: \"14.jpeg\" },\r\n//   History: { name: \"네로\", img: \"15.jpeg\" },\r\n//   Fantasy: { name: \"札幌\", img: \"17.jpeg\" },\r\n//   Music: { name: \"차은우\", img: \"18.png\" },\r\n//   Romance: { name: \"Jerry\", img: \"19.jpg\" },\r\n// ];\r\n\r\n// function renderUser(genres) {\r\n//   genres.map((genres, users) => {\r\n//     genres.genre === users.user &&\r\n//       (genre.userName = users.value.name) &&\r\n//       (genre.userImg = users.value.img);\r\n//   });\r\n// }\r\n\r\nfunction Movie({ year, title, summary, poster, genres }) {\r\n  return (\r\n    <div className=\"movieContainer\">\r\n      <div className=\"movie\">\r\n        <img className=\"movie_poster\" src={poster} alt={title} title={title} />\r\n        <div className=\"movie_data\">\r\n          <h3 className=\"movie_title\">{title}</h3>\r\n          <strong className=\"movie_year\">{year}</strong>\r\n          <ul className=\"movie_genres\">\r\n            {genres.map((genre, index) => (\r\n              <li key={index} className=\"genres_genre\">\r\n                {index === genres.length - 1 ? genre : genre + \",\"}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <p className=\"movie_summary\">\r\n            {summary.slice(0, 180)}\r\n            {summary.length > 180 && (\r\n              <button\r\n                className=\"summary_showMore\"\r\n                title=\"Show more\"\r\n                type=\"button\"\r\n              >\r\n                <i className=\"fas fa-ellipsis-h\"></i>\r\n              </button>\r\n            )}\r\n          </p>\r\n          {/* <ul>\r\n          {genres.map((genre) =>\r\n            users.map(\r\n              (value) => genres.genre === users.value && console.log(value)\r\n            )\r\n          )}\r\n          <li>\r\n             <img src={genres.value.img} />\r\n          </li>\r\n        </ul> */}\r\n          {/* <img src={users.Action.img} /> */}\r\n          {/* <ul>\r\n          {genres.map((genre, index, users) => (\r\n            <li key={index}>\r\n              <img\r\n                className=\"userImg\"\r\n                src={genres.genre === users.value && users.value.img}\r\n              />\r\n            </li>\r\n          ))}\r\n        </ul> */}\r\n        </div>\r\n      </div>\r\n      <div className=\"movieUsersContainer\">\r\n        <div className=\"movieUsers\">\r\n          <ul className=\"users_image\">\r\n            <li className=\"usersImageList firstUserImg\">\r\n              <img\r\n                className=\"userImg\"\r\n                src=\"https://img.theqoo.net/img/TnXUz.jpg\"\r\n                alt=\"UserImg\"\r\n              />\r\n            </li>\r\n            <li className=\"usersImageList secondUserImg\">\r\n              <img\r\n                className=\"userImg\"\r\n                src=\"https://static-storychat.pstatic.net/1527676_16771803/9bnc5dga37710.jpg\"\r\n                alt=\"UserImg\"\r\n              />\r\n            </li>\r\n            <li className=\"usersImageList thirdUserImg\">\r\n              <img\r\n                className=\"userImg\"\r\n                src=\"https://blog.kakaocdn.net/dn/3Lndn/btqEh7tx1It/KRYxjpmeP4kzdZOAYGN8y0/img.png\"\r\n                alt=\"UserImg\"\r\n              />\r\n            </li>\r\n          </ul>\r\n          <span className=\"userWatching\">\r\n            장동윤, 신짱구, Inter Milan and 4 others are watching this.\r\n          </span>\r\n          <div className=\"recommend\">\r\n            <button className=\"recommendButton\" type=\"button\">\r\n              <i class=\"far fa-thumbs-up\"></i>\r\n            </button>\r\n            <span className=\"recommendCount\">32</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nMovie.propTypes = {\r\n  id: propTypes.number.isRequired,\r\n  year: propTypes.number.isRequired,\r\n  title: propTypes.string.isRequired,\r\n  summary: propTypes.string.isRequired,\r\n  poster: propTypes.string.isRequired,\r\n  genres: propTypes.arrayOf(propTypes.string).isRequired,\r\n};\r\n\r\nexport default Movie;\r\n","import React from \"react\";\nimport propTypes from \"prop-types\";\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\nimport { render } from \"@testing-library/react\";\nimport \"./Movie.css\";\n\nclass App extends React.Component {\n  state = {\n    isLoading: true,\n    movies: [],\n  };\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  getMovies = async () => {\n    const {\n      data: {\n        data: { movies },\n      },\n    } = await axios.get(\n      \"https://yts-proxy.nomadcoders1.now.sh/list_movies.json?sort_by=rating\"\n    ); //axios로 영화 정보를 가져옵니다. (느림)\n    //평점 순으로 data를 정렬합니다.\n    //awiat => axios가 끝날 때 까지 기다렸다가 작업을 계속합니다. (async를 반드시 사용해야합니다.\n    this.setState({ movies, isLoading: false }); //state의 이름과 받아오는 데이터의 객체 이름인 movies가 같기 때문에 줄여쓸 수 있습니다.\n    console.log(movies);\n  };\n\n  renderMovies = () => {\n    const { movies } = this.state;\n\n    return movies.map((movie) => (\n      <Movie\n        key={movie.id}\n        id={movie.id}\n        year={movie.year}\n        title={movie.title}\n        summary={movie.summary}\n        poster={movie.medium_cover_image}\n        genres={movie.genres}\n      />\n    ));\n  };\n\n  render() {\n    const { isLoading, movies } = this.state;\n    const number = Math.floor(Math.random() * 100);\n\n    console.log(movies);\n\n    return (\n      <div>\n        {isLoading ? (\n          <div className=\"loader\">\n            <p className=\"loader_text\">Please wait🌻</p>\n          </div>\n        ) : (\n          <div className=\"movies\">{this.renderMovies()}</div>\n        )}\n      </div> //JSX내부에는 꼭 className이라고 정확히 명시해줍니다. js의 class와 혼동할 수 있음.\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}